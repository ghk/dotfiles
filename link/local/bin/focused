#!/usr/bin/python

import os
import sys
import subprocess
import time

import dbus
import dbus.service
import dbus.glib
import gobject
from threading import Thread

import subprocess

import sqlite3 as lite

def init():
    con = lite.connect('/home/ghk/.local/focused.db')
    cur = con.cursor()
    cur.execute("CREATE TABLE focused(exe TEXT, start INT, duration INT, data1 TEXT, data2 TEXT, data3 TEXT)")
    con.close()

def get_exe(pid):
    try:
        return subprocess.check_output(["readlink", "/proc/"+pid+"/exe"])
    except:
        return ""

def save_data(pid_data):
    duration = time.time() - pid_data["start"]
    con = lite.connect('/home/ghk/.local/focused.db')
    cur = con.cursor()
    cur.execute("INSERT INTO focused VALUES('%s', %d, %d, NULL, NULL, NULL)"%(
        pid_data["exe"], pid_data["start"], duration
        ))
    con.commit()
    con.close()

def create_data(pid):
    start = time.time()
    exe = get_exe(pid)
    return {
            "exe": exe,
            "start": start,
        }

last_pid = -1
last_pid_data = None

def process(pid):
    global last_pid
    global last_pid_data

    if last_pid == pid:
        return

    if last_pid != -1:
        save_data(last_pid_data)

    last_pid = pid
    last_pid_data = create_data(pid)

def process_thread(pid):
    print "starting thread"
    t = Thread(target=process, args=(pid,))
    t.start()
    print "thread started"

class FocusedService(dbus.service.Object):

    def __init__(self):
    	bus_name = dbus.service.BusName('ejos.focused', bus = dbus.SessionBus())
    	dbus.service.Object.__init__(self, bus_name, '/')

    def listen(self):
    	loop = gobject.MainLoop()
    	loop.run()

    @dbus.service.method('ejos.focused')
    def focus(self, pid):
    	process(pid)


if __name__ == '__main__':

    myservice = FocusedService()
    myservice.listen()
